
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4081 (git sha1 7a5ac909, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: i2c_master.v
Parsing formal Verilog input from `i2c_master.v' to AST representation.
Generating RTLIL representation for module `\i2c_master'.
Successfully finished Verilog frontend.

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \i2c_master

2.1.2. Analyzing design hierarchy..
Top module:  \i2c_master
Removed 0 unused modules.
Module i2c_master directly or indirectly contains formal properties -> setting "keep" attribute.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$i2c_master.v:434$64 in module i2c_master.
Marked 15 switch rules as full_case in process $proc$i2c_master.v:199$40 in module i2c_master.
Marked 3 switch rules as full_case in process $proc$i2c_master.v:171$34 in module i2c_master.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 18 redundant assignments.
Promoted 57 assignments to connections.

2.2.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\i2c_master.$proc$i2c_master.v:0$237'.
  Set init value: $formal$i2c_master.v:568$32_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$235'.
  Set init value: $formal$i2c_master.v:565$31_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$233'.
  Set init value: $formal$i2c_master.v:564$30_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$231'.
  Set init value: $formal$i2c_master.v:563$29_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$229'.
  Set init value: $formal$i2c_master.v:562$28_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$227'.
  Set init value: $formal$i2c_master.v:559$27_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$225'.
  Set init value: $formal$i2c_master.v:558$26_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$223'.
  Set init value: $formal$i2c_master.v:555$25_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$221'.
  Set init value: $formal$i2c_master.v:554$24_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$219'.
  Set init value: $formal$i2c_master.v:551$23_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$217'.
  Set init value: $formal$i2c_master.v:550$22_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$215'.
  Set init value: $formal$i2c_master.v:549$21_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$213'.
  Set init value: $formal$i2c_master.v:540$20_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$211'.
  Set init value: $formal$i2c_master.v:537$19_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$209'.
  Set init value: $formal$i2c_master.v:536$18_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$207'.
  Set init value: $formal$i2c_master.v:535$17_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$205'.
  Set init value: $formal$i2c_master.v:534$16_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$203'.
  Set init value: $formal$i2c_master.v:533$15_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$201'.
  Set init value: $formal$i2c_master.v:532$14_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$199'.
  Set init value: $formal$i2c_master.v:525$13_EN = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:0$194'.
  Set init value: \f_past_valid = 1'0
Found init rule in `\i2c_master.$proc$i2c_master.v:169$193'.
  Set init value: \sda_db = 1'1
Found init rule in `\i2c_master.$proc$i2c_master.v:168$192'.
  Set init value: \scl_db = 1'1
Found init rule in `\i2c_master.$proc$i2c_master.v:166$191'.
  Set init value: \sda_sr = 4'1111
Found init rule in `\i2c_master.$proc$i2c_master.v:165$190'.
  Set init value: \scl_sr = 4'1111
Found init rule in `\i2c_master.$proc$i2c_master.v:115$189'.
  Set init value: \STATE = 4'0000
Found init rule in `\i2c_master.$proc$i2c_master.v:100$188'.
  Set init value: \nxt_timer = 8'00000000
Found init rule in `\i2c_master.$proc$i2c_master.v:99$187'.
  Set init value: \timer = 8'00000000

2.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \i_rstn in `\i2c_master.$proc$i2c_master.v:434$64'.
Found async reset \i_rstn in `\i2c_master.$proc$i2c_master.v:171$34'.

2.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$237'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$235'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$233'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$231'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$229'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$227'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$225'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$223'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$221'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$219'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$217'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$215'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$213'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$211'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$209'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$207'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$205'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$203'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$201'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$199'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$195'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:0$194'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:169$193'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:168$192'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:166$191'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:165$190'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:115$189'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:100$188'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:99$187'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:575$161'.
     1/2: $0$formal$i2c_master.v:576$33_EN[0:0]$163
     2/2: $0$formal$i2c_master.v:576$33_CHECK[0:0]$162
Creating decoders for process `\i2c_master.$proc$i2c_master.v:548$121'.
     1/24: $0$formal$i2c_master.v:549$21_EN[0:0]$123
     2/24: $0$formal$i2c_master.v:549$21_CHECK[0:0]$122
     3/24: $0$formal$i2c_master.v:550$22_EN[0:0]$125
     4/24: $0$formal$i2c_master.v:550$22_CHECK[0:0]$124
     5/24: $0$formal$i2c_master.v:551$23_EN[0:0]$127
     6/24: $0$formal$i2c_master.v:551$23_CHECK[0:0]$126
     7/24: $0$formal$i2c_master.v:554$24_EN[0:0]$129
     8/24: $0$formal$i2c_master.v:554$24_CHECK[0:0]$128
     9/24: $0$formal$i2c_master.v:555$25_EN[0:0]$131
    10/24: $0$formal$i2c_master.v:555$25_CHECK[0:0]$130
    11/24: $0$formal$i2c_master.v:558$26_EN[0:0]$133
    12/24: $0$formal$i2c_master.v:558$26_CHECK[0:0]$132
    13/24: $0$formal$i2c_master.v:559$27_EN[0:0]$135
    14/24: $0$formal$i2c_master.v:559$27_CHECK[0:0]$134
    15/24: $0$formal$i2c_master.v:562$28_EN[0:0]$137
    16/24: $0$formal$i2c_master.v:562$28_CHECK[0:0]$136
    17/24: $0$formal$i2c_master.v:563$29_EN[0:0]$139
    18/24: $0$formal$i2c_master.v:563$29_CHECK[0:0]$138
    19/24: $0$formal$i2c_master.v:564$30_EN[0:0]$141
    20/24: $0$formal$i2c_master.v:564$30_CHECK[0:0]$140
    21/24: $0$formal$i2c_master.v:565$31_EN[0:0]$143
    22/24: $0$formal$i2c_master.v:565$31_CHECK[0:0]$142
    23/24: $0$formal$i2c_master.v:568$32_EN[0:0]$145
    24/24: $0$formal$i2c_master.v:568$32_CHECK[0:0]$144
Creating decoders for process `\i2c_master.$proc$i2c_master.v:530$82'.
     1/14: $0$formal$i2c_master.v:532$14_EN[0:0]$92
     2/14: $0$formal$i2c_master.v:532$14_CHECK[0:0]$91
     3/14: $0$formal$i2c_master.v:533$15_EN[0:0]$94
     4/14: $0$formal$i2c_master.v:533$15_CHECK[0:0]$93
     5/14: $0$formal$i2c_master.v:534$16_EN[0:0]$96
     6/14: $0$formal$i2c_master.v:534$16_CHECK[0:0]$95
     7/14: $0$formal$i2c_master.v:535$17_EN[0:0]$98
     8/14: $0$formal$i2c_master.v:535$17_CHECK[0:0]$97
     9/14: $0$formal$i2c_master.v:536$18_EN[0:0]$100
    10/14: $0$formal$i2c_master.v:536$18_CHECK[0:0]$99
    11/14: $0$formal$i2c_master.v:537$19_EN[0:0]$102
    12/14: $0$formal$i2c_master.v:537$19_CHECK[0:0]$101
    13/14: $0$formal$i2c_master.v:540$20_EN[0:0]$104
    14/14: $0$formal$i2c_master.v:540$20_CHECK[0:0]$103
Creating decoders for process `\i2c_master.$proc$i2c_master.v:524$67'.
     1/2: $0$formal$i2c_master.v:525$13_EN[0:0]$71
     2/2: $0$formal$i2c_master.v:525$13_CHECK[0:0]$70
Creating decoders for process `\i2c_master.$proc$i2c_master.v:514$66'.
Creating decoders for process `\i2c_master.$proc$i2c_master.v:434$64'.
     1/21: $0\RETURN_STATE[3:0]
     2/21: $0\STATE[3:0]
     3/21: $0\timer[7:0]
     4/21: $0\repeat_start[0:0]
     5/21: $0\wr_cycle[0:0]
     6/21: $0\bit_counter[4:0]
     7/21: $0\read_sr[7:0]
     8/21: $0\sda_txqueue[26:0]
     9/21: $0\o_sda[0:0]
    10/21: $0\o_scl[0:0]
    11/21: $0\o_nack_data[0:0]
    12/21: $0\o_nack_addr[0:0]
    13/21: $0\o_nack_slave[0:0]
    14/21: $0\o_rdata_valid[0:0]
    15/21: $0\o_busy[0:0]
    16/21: $0\o_rdata[7:0]
    17/21: $0\r_wdata[7:0]
    18/21: $0\r_reg_addr[7:0]
    19/21: $0\r_slave_addr[6:0]
    20/21: $0\r_rd[0:0]
    21/21: $0\r_wr[0:0]
Creating decoders for process `\i2c_master.$proc$i2c_master.v:199$40'.
     1/61: $7\NEXT_STATE[3:0]
     2/61: $8\nxt_timer[7:0]
     3/61: $7\nxt_timer[7:0]
     4/61: $6\NEXT_RETURN_STATE[3:0]
     5/61: $6\nxt_timer[7:0]
     6/61: $5\nxt_rdata_valid[0:0]
     7/61: $4\nxt_rdata[7:0]
     8/61: $6\NEXT_STATE[3:0]
     9/61: $4\nxt_wr_cycle[0:0]
    10/61: $4\nxt_rdata_valid[0:0]
    11/61: $3\nxt_rdata[7:0]
    12/61: $5\NEXT_RETURN_STATE[3:0]
    13/61: $5\nxt_timer[7:0]
    14/61: $3\nxt_wr_cycle[0:0]
    15/61: $3\nxt_rdata_valid[0:0]
    16/61: $2\nxt_rdata[7:0]
    17/61: $4\NEXT_RETURN_STATE[3:0]
    18/61: $5\NEXT_STATE[3:0]
    19/61: $4\nxt_timer[7:0]
    20/61: $4\nxt_read_sr[7:0]
    21/61: $3\NEXT_RETURN_STATE[3:0]
    22/61: $4\NEXT_STATE[3:0]
    23/61: $3\nxt_timer[7:0]
    24/61: $3\nxt_read_sr[7:0]
    25/61: $5\nxt_nack_data[0:0]
    26/61: $4\nxt_nack_addr[0:0]
    27/61: $4\nxt_nack_data[0:0]
    28/61: $3\nxt_nack_slave[0:0]
    29/61: $3\nxt_nack_data[0:0]
    30/61: $3\nxt_nack_addr[0:0]
    31/61: $2\nxt_read_sr[7:0]
    32/61: $2\NEXT_RETURN_STATE[3:0]
    33/61: $3\NEXT_STATE[3:0]
    34/61: $2\nxt_timer[7:0]
    35/61: $2\nxt_nack_data[0:0]
    36/61: $2\nxt_nack_addr[0:0]
    37/61: $2\nxt_nack_slave[0:0]
    38/61: $2\nxt_bit_counter[4:0]
    39/61: $3\nxt_sda_txqueue[26:0]
    40/61: $2\nxt_sda_txqueue[26:0]
    41/61: $2\NEXT_STATE[3:0]
    42/61: $2\nxt_wr_cycle[0:0]
    43/61: $2\load_r[0:0]
    44/61: $2\nxt_busy[0:0]
    45/61: $2\nxt_rdata_valid[0:0]
    46/61: $1\NEXT_RETURN_STATE[3:0]
    47/61: $1\NEXT_STATE[3:0]
    48/61: $1\nxt_timer[7:0]
    49/61: $1\nxt_sda_o[0:0]
    50/61: $1\nxt_scl_o[0:0]
    51/61: $1\nxt_wr_cycle[0:0]
    52/61: $1\nxt_nack_data[0:0]
    53/61: $1\nxt_nack_addr[0:0]
    54/61: $1\nxt_nack_slave[0:0]
    55/61: $1\nxt_rdata_valid[0:0]
    56/61: $1\nxt_busy[0:0]
    57/61: $1\nxt_rdata[7:0]
    58/61: $1\load_r[0:0]
    59/61: $1\nxt_bit_counter[4:0]
    60/61: $1\nxt_read_sr[7:0]
    61/61: $1\nxt_sda_txqueue[26:0]
Creating decoders for process `\i2c_master.$proc$i2c_master.v:171$34'.
     1/4: $0\sda_sr[3:0]
     2/4: $0\scl_sr[3:0]
     3/4: $0\sda_db[0:0]
     4/4: $0\scl_db[0:0]

2.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\i2c_master.$formal$i2c_master.v:521$11_CHECK' from process `\i2c_master.$proc$i2c_master.v:0$195'.
No latch inferred for signal `\i2c_master.$formal$i2c_master.v:521$11_EN' from process `\i2c_master.$proc$i2c_master.v:0$195'.
No latch inferred for signal `\i2c_master.$formal$i2c_master.v:576$33_CHECK' from process `\i2c_master.$proc$i2c_master.v:575$161'.
No latch inferred for signal `\i2c_master.$formal$i2c_master.v:576$33_EN' from process `\i2c_master.$proc$i2c_master.v:575$161'.
No latch inferred for signal `\i2c_master.\nxt_timer' from process `\i2c_master.$proc$i2c_master.v:199$40'.
Removing init bit 1'0 for non-memory siginal `\i2c_master.\nxt_timer [0]` in process `\i2c_master.$proc$i2c_master.v:199$40`.
Removing init bit 1'0 for non-memory siginal `\i2c_master.\nxt_timer [1]` in process `\i2c_master.$proc$i2c_master.v:199$40`.
Removing init bit 1'0 for non-memory siginal `\i2c_master.\nxt_timer [2]` in process `\i2c_master.$proc$i2c_master.v:199$40`.
Removing init bit 1'0 for non-memory siginal `\i2c_master.\nxt_timer [3]` in process `\i2c_master.$proc$i2c_master.v:199$40`.
Removing init bit 1'0 for non-memory siginal `\i2c_master.\nxt_timer [4]` in process `\i2c_master.$proc$i2c_master.v:199$40`.
Removing init bit 1'0 for non-memory siginal `\i2c_master.\nxt_timer [5]` in process `\i2c_master.$proc$i2c_master.v:199$40`.
Removing init bit 1'0 for non-memory siginal `\i2c_master.\nxt_timer [6]` in process `\i2c_master.$proc$i2c_master.v:199$40`.
Removing init bit 1'0 for non-memory siginal `\i2c_master.\nxt_timer [7]` in process `\i2c_master.$proc$i2c_master.v:199$40`.
No latch inferred for signal `\i2c_master.\NEXT_STATE' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\NEXT_RETURN_STATE' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_sda_txqueue' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_read_sr' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_bit_counter' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\load_r' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_scl_o' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_sda_o' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_rdata' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_busy' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_rdata_valid' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_nack_slave' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_nack_addr' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_nack_data' from process `\i2c_master.$proc$i2c_master.v:199$40'.
No latch inferred for signal `\i2c_master.\nxt_wr_cycle' from process `\i2c_master.$proc$i2c_master.v:199$40'.

2.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\i2c_master.$formal$i2c_master.v:549$21_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$947' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:549$21_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$948' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:550$22_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$949' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:550$22_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$950' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:551$23_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$951' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:551$23_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$952' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:554$24_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$953' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:554$24_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$954' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:555$25_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$955' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:555$25_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$956' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:558$26_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$957' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:558$26_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$958' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:559$27_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$959' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:559$27_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$960' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:562$28_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$961' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:562$28_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$962' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:563$29_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$963' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:563$29_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$964' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:564$30_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$965' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:564$30_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$966' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:565$31_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$967' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:565$31_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$968' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:568$32_CHECK' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$969' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:568$32_EN' using process `\i2c_master.$proc$i2c_master.v:548$121'.
  created $ff cell `$procdff$970' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:532$3$0' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$971' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:533$4$0' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$972' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:534$5$0' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$973' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:535$6$0' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$974' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:536$7$0' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$975' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:537$8$0' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$976' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:540$9$0' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$977' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:541$10$0' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$978' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:532$14_CHECK' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$979' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:532$14_EN' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$980' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:533$15_CHECK' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$981' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:533$15_EN' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$982' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:534$16_CHECK' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$983' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:534$16_EN' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$984' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:535$17_CHECK' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$985' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:535$17_EN' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$986' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:536$18_CHECK' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$987' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:536$18_EN' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$988' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:537$19_CHECK' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$989' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:537$19_EN' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$990' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:540$20_CHECK' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$991' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:540$20_EN' using process `\i2c_master.$proc$i2c_master.v:530$82'.
  created $ff cell `$procdff$992' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:525$1$0' using process `\i2c_master.$proc$i2c_master.v:524$67'.
  created $ff cell `$procdff$993' with global clock.
Creating register for signal `\i2c_master.$past$i2c_master.v:526$2$0' using process `\i2c_master.$proc$i2c_master.v:524$67'.
  created $ff cell `$procdff$994' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:525$13_CHECK' using process `\i2c_master.$proc$i2c_master.v:524$67'.
  created $ff cell `$procdff$995' with global clock.
Creating register for signal `\i2c_master.$formal$i2c_master.v:525$13_EN' using process `\i2c_master.$proc$i2c_master.v:524$67'.
  created $ff cell `$procdff$996' with global clock.
Creating register for signal `\i2c_master.\f_past_valid' using process `\i2c_master.$proc$i2c_master.v:514$66'.
  created $dff cell `$procdff$997' with positive edge clock.
Creating register for signal `\i2c_master.\o_rdata' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$998' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\o_busy' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$999' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\o_rdata_valid' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1000' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\o_nack_slave' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1001' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\o_nack_addr' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1002' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\o_nack_data' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1003' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\o_scl' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1004' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\o_sda' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1005' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\timer' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1006' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\STATE' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1007' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\RETURN_STATE' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1008' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\sda_txqueue' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1009' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\read_sr' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1010' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\bit_counter' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1011' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\r_wr' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1012' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\r_rd' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1013' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\r_slave_addr' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1014' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\r_reg_addr' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1015' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\r_wdata' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1016' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\wr_cycle' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1017' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\repeat_start' using process `\i2c_master.$proc$i2c_master.v:434$64'.
  created $adff cell `$procdff$1018' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\scl_sr' using process `\i2c_master.$proc$i2c_master.v:171$34'.
  created $adff cell `$procdff$1019' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\sda_sr' using process `\i2c_master.$proc$i2c_master.v:171$34'.
  created $adff cell `$procdff$1020' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\scl_db' using process `\i2c_master.$proc$i2c_master.v:171$34'.
  created $adff cell `$procdff$1021' with positive edge clock and negative level reset.
Creating register for signal `\i2c_master.\sda_db' using process `\i2c_master.$proc$i2c_master.v:171$34'.
  created $adff cell `$procdff$1022' with positive edge clock and negative level reset.

2.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `i2c_master.$proc$i2c_master.v:0$237'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$235'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$233'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$231'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$229'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$227'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$225'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$223'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$221'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$219'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$217'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$215'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$213'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$211'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$209'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$207'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$205'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$203'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$201'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$199'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$195'.
Removing empty process `i2c_master.$proc$i2c_master.v:0$194'.
Removing empty process `i2c_master.$proc$i2c_master.v:169$193'.
Removing empty process `i2c_master.$proc$i2c_master.v:168$192'.
Removing empty process `i2c_master.$proc$i2c_master.v:166$191'.
Removing empty process `i2c_master.$proc$i2c_master.v:165$190'.
Removing empty process `i2c_master.$proc$i2c_master.v:115$189'.
Removing empty process `i2c_master.$proc$i2c_master.v:100$188'.
Removing empty process `i2c_master.$proc$i2c_master.v:99$187'.
Found and cleaned up 1 empty switch in `\i2c_master.$proc$i2c_master.v:575$161'.
Removing empty process `i2c_master.$proc$i2c_master.v:575$161'.
Found and cleaned up 1 empty switch in `\i2c_master.$proc$i2c_master.v:548$121'.
Removing empty process `i2c_master.$proc$i2c_master.v:548$121'.
Found and cleaned up 2 empty switches in `\i2c_master.$proc$i2c_master.v:530$82'.
Removing empty process `i2c_master.$proc$i2c_master.v:530$82'.
Found and cleaned up 1 empty switch in `\i2c_master.$proc$i2c_master.v:524$67'.
Removing empty process `i2c_master.$proc$i2c_master.v:524$67'.
Removing empty process `i2c_master.$proc$i2c_master.v:514$66'.
Found and cleaned up 1 empty switch in `\i2c_master.$proc$i2c_master.v:434$64'.
Removing empty process `i2c_master.$proc$i2c_master.v:434$64'.
Found and cleaned up 15 empty switches in `\i2c_master.$proc$i2c_master.v:199$40'.
Removing empty process `i2c_master.$proc$i2c_master.v:199$40'.
Found and cleaned up 4 empty switches in `\i2c_master.$proc$i2c_master.v:171$34'.
Removing empty process `i2c_master.$proc$i2c_master.v:171$34'.
Cleaned up 25 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~34 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 15 unused cells and 369 unused wires.
<suppressed ~26 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
Checking module i2c_master...
Found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~288 debug messages>
Removed a total of 96 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$365.
    dead port 2/2 on $mux $procmux$371.
    dead port 2/2 on $mux $procmux$379.
    dead port 2/2 on $mux $procmux$381.
    dead port 2/2 on $mux $procmux$383.
    dead port 2/2 on $mux $procmux$385.
    dead port 2/2 on $mux $procmux$387.
    dead port 2/2 on $mux $procmux$396.
    dead port 2/2 on $mux $procmux$398.
    dead port 2/2 on $mux $procmux$400.
    dead port 2/2 on $mux $procmux$409.
    dead port 2/2 on $mux $procmux$411.
    dead port 2/2 on $mux $procmux$413.
    dead port 2/2 on $mux $procmux$422.
    dead port 2/2 on $mux $procmux$424.
    dead port 2/2 on $mux $procmux$426.
    dead port 2/2 on $mux $procmux$435.
    dead port 2/2 on $mux $procmux$437.
    dead port 2/2 on $mux $procmux$439.
    dead port 2/2 on $mux $procmux$446.
    dead port 2/2 on $mux $procmux$448.
    dead port 2/2 on $mux $procmux$456.
    dead port 2/2 on $mux $procmux$458.
    dead port 2/2 on $mux $procmux$466.
    dead port 2/2 on $mux $procmux$468.
    dead port 2/2 on $mux $procmux$476.
    dead port 2/2 on $mux $procmux$478.
    dead port 2/2 on $mux $procmux$486.
    dead port 2/2 on $mux $procmux$488.
    dead port 2/2 on $mux $procmux$496.
    dead port 2/2 on $mux $procmux$498.
    dead port 2/2 on $mux $procmux$505.
    dead port 2/2 on $mux $procmux$512.
    dead port 2/2 on $mux $procmux$519.
    dead port 2/2 on $mux $procmux$526.
    dead port 2/2 on $mux $procmux$533.
    dead port 2/2 on $mux $procmux$540.
    dead port 1/2 on $mux $procmux$550.
    dead port 2/2 on $mux $procmux$552.
    dead port 2/2 on $mux $procmux$554.
    dead port 2/2 on $mux $procmux$563.
    dead port 2/2 on $mux $procmux$565.
    dead port 2/2 on $mux $procmux$573.
    dead port 2/2 on $mux $procmux$575.
    dead port 2/2 on $mux $procmux$583.
    dead port 2/2 on $mux $procmux$585.
    dead port 2/2 on $mux $procmux$594.
    dead port 2/2 on $mux $procmux$596.
    dead port 1/2 on $mux $procmux$606.
    dead port 1/2 on $mux $procmux$609.
    dead port 2/2 on $mux $procmux$611.
    dead port 2/2 on $mux $procmux$613.
    dead port 1/2 on $mux $procmux$623.
    dead port 2/2 on $mux $procmux$625.
    dead port 2/2 on $mux $procmux$627.
    dead port 1/2 on $mux $procmux$637.
    dead port 2/2 on $mux $procmux$639.
    dead port 2/2 on $mux $procmux$641.
    dead port 2/2 on $mux $procmux$650.
    dead port 2/2 on $mux $procmux$652.
    dead port 2/2 on $mux $procmux$661.
    dead port 2/2 on $mux $procmux$663.
    dead port 2/2 on $mux $procmux$672.
    dead port 2/2 on $mux $procmux$674.
    dead port 2/2 on $mux $procmux$682.
    dead port 2/2 on $mux $procmux$690.
    dead port 2/2 on $mux $procmux$698.
    dead port 2/2 on $mux $procmux$706.
    dead port 2/2 on $mux $procmux$714.
    dead port 2/2 on $mux $procmux$722.
    dead port 2/2 on $mux $procmux$730.
    dead port 2/2 on $mux $procmux$738.
    dead port 2/2 on $mux $procmux$750.
    dead port 2/2 on $mux $procmux$752.
    dead port 2/2 on $mux $procmux$763.
    dead port 2/2 on $mux $procmux$775.
    dead port 2/2 on $mux $procmux$787.
    dead port 2/2 on $mux $procmux$799.
    dead port 2/2 on $mux $procmux$811.
    dead port 2/2 on $mux $procmux$823.
Removed 80 multiplexer ports.
<suppressed ~61 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
    New ctrl vector for $mux cell $procmux$704: { }
    New ctrl vector for $pmux cell $procmux$835: { $procmux$776_CMP $procmux$753_CMP $procmux$831_CMP $auto$opt_reduce.cc:134:opt_mux$1024 $procmux$555_CMP $procmux$388_CMP $procmux$366_CMP }
    New ctrl vector for $pmux cell $procmux$845: { $procmux$831_CMP $procmux$830_CMP $auto$opt_reduce.cc:134:opt_mux$1026 $procmux$388_CMP $procmux$366_CMP }
    New ctrl vector for $pmux cell $procmux$855: { $procmux$753_CMP $procmux$830_CMP $auto$opt_reduce.cc:134:opt_mux$1028 }
    New ctrl vector for $pmux cell $procmux$864: { $procmux$831_CMP $auto$opt_reduce.cc:134:opt_mux$1030 }
  Optimizing cells in module \i2c_master.
Performed a total of 5 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~126 debug messages>
Removed a total of 42 cells.

2.6.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 219 unused wires.
<suppressed ~1 debug messages>

2.6.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

2.6.8. Rerunning OPT passes. (Maybe there is more to do..)

2.6.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \i2c_master..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~45 debug messages>

2.6.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \i2c_master.
Performed a total of 0 changes.

2.6.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

2.6.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..

2.6.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.

2.6.14. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 bits (of 32) from mux cell i2c_master.$ternary$i2c_master.v:301$46 ($mux).
Removed top 29 bits (of 32) from mux cell i2c_master.$ternary$i2c_master.v:315$48 ($mux).
Removed top 31 bits (of 32) from port B of cell i2c_master.$add$i2c_master.v:346$49 ($add).
Removed top 27 bits (of 32) from port Y of cell i2c_master.$add$i2c_master.v:346$49 ($add).
Removed top 1 bits (of 5) from port B of cell i2c_master.$eq$i2c_master.v:348$50 ($eq).
Removed top 30 bits (of 32) from port B of cell i2c_master.$le$i2c_master.v:421$60 ($le).
Removed top 31 bits (of 32) from port B of cell i2c_master.$sub$i2c_master.v:425$62 ($sub).
Removed top 23 bits (of 32) from port Y of cell i2c_master.$sub$i2c_master.v:425$62 ($sub).
Removed top 24 bits (of 32) from mux cell i2c_master.$ternary$i2c_master.v:425$63 ($mux).
Removed top 31 bits (of 32) from port B of cell i2c_master.$and$i2c_master.v:0$77 ($and).
Removed top 31 bits (of 32) from port Y of cell i2c_master.$and$i2c_master.v:0$77 ($and).
Removed top 31 bits (of 32) from port B of cell i2c_master.$and$i2c_master.v:0$79 ($and).
Removed top 31 bits (of 32) from port Y of cell i2c_master.$and$i2c_master.v:0$79 ($and).
Removed top 31 bits (of 32) from port B of cell i2c_master.$and$i2c_master.v:0$105 ($and).
Removed top 31 bits (of 32) from port Y of cell i2c_master.$and$i2c_master.v:0$105 ($and).
Removed top 31 bits (of 32) from port B of cell i2c_master.$and$i2c_master.v:0$107 ($and).
Removed top 31 bits (of 32) from port Y of cell i2c_master.$and$i2c_master.v:0$107 ($and).
Removed top 1 bits (of 4) from port B of cell i2c_master.$eq$i2c_master.v:563$156 ($eq).
Removed top 3 bits (of 4) from port B of cell i2c_master.$eq$i2c_master.v:564$157 ($eq).
Removed top 2 bits (of 8) from port B of cell i2c_master.$eq$i2c_master.v:565$158 ($eq).
Removed top 3 bits (of 4) from port B of cell i2c_master.$ne$i2c_master.v:576$164 ($ne).
Removed top 1 bits (of 4) from port B of cell i2c_master.$procmux$366_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell i2c_master.$procmux$388_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell i2c_master.$procmux$394 ($mux).
Removed top 2 bits (of 8) from mux cell i2c_master.$procmux$407 ($mux).
Removed top 2 bits (of 4) from mux cell i2c_master.$procmux$484 ($mux).
Removed top 2 bits (of 8) from mux cell i2c_master.$procmux$494 ($mux).
Removed top 1 bits (of 4) from port B of cell i2c_master.$procmux$555_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell i2c_master.$procmux$561 ($mux).
Removed top 7 bits (of 27) from mux cell i2c_master.$procmux$748 ($mux).
Removed top 2 bits (of 4) from port B of cell i2c_master.$procmux$753_CMP0 ($eq).
Removed top 7 bits (of 27) from mux cell i2c_master.$procmux$761 ($mux).
Removed top 3 bits (of 4) from port B of cell i2c_master.$procmux$776_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell i2c_master.$procmux$830_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell i2c_master.$procmux$831_CMP0 ($eq).
Removed top 1 bits (of 9) from port Y of cell i2c_master.$sub$i2c_master.v:425$62 ($sub).
Removed top 1 bits (of 4) from wire i2c_master.$3\NEXT_RETURN_STATE[3:0].
Removed top 2 bits (of 4) from wire i2c_master.$5\NEXT_RETURN_STATE[3:0].
Removed top 2 bits (of 8) from wire i2c_master.$5\nxt_timer[7:0].
Removed top 2 bits (of 4) from wire i2c_master.$6\NEXT_RETURN_STATE[3:0].
Removed top 2 bits (of 8) from wire i2c_master.$6\nxt_timer[7:0].
Removed top 27 bits (of 32) from wire i2c_master.$add$i2c_master.v:346$49_Y.
Removed top 31 bits (of 32) from wire i2c_master.$and$i2c_master.v:0$105_Y.
Removed top 31 bits (of 32) from wire i2c_master.$and$i2c_master.v:0$107_Y.
Removed top 29 bits (of 32) from wire i2c_master.$ternary$i2c_master.v:301$46_Y.
Removed top 29 bits (of 32) from wire i2c_master.$ternary$i2c_master.v:315$48_Y.

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

2.9. Executing MEMORY_COLLECT pass (generating $mem cells).

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~4 debug messages>

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
Removed a total of 0 cells.

2.10.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.10.4. Finished fast OPT passes.

2.11. Printing statistics.

=== i2c_master ===

   Number of wires:                216
   Number of wire bits:            679
   Number of public wires:          46
   Number of public wire bits:     186
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                229
     $add                            1
     $adff                          20
     $and                            2
     $assert                        13
     $assume                         9
     $dff                            1
     $eq                            24
     $ff                            32
     $initstate                      1
     $le                             1
     $logic_and                      4
     $logic_not                     10
     $logic_or                       5
     $mux                           83
     $ne                             2
     $not                            4
     $pmux                          12
     $reduce_or                      4
     $sub                            1

2.12. Executing CHECK pass (checking for obvious problems).
Checking module i2c_master...
Found and reported 0 problems.

3. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

4. Executing CLK2FFLOGIC pass (convert clocked FFs to generic $ff cells).
Replacing i2c_master.$procdff$1000 ($adff): CLK=\i_clk, D=\nxt_rdata_valid, Q=\o_rdata_valid
Replacing i2c_master.$procdff$1001 ($adff): CLK=\i_clk, D=\nxt_nack_slave, Q=\o_nack_slave
Replacing i2c_master.$procdff$1002 ($adff): CLK=\i_clk, D=\nxt_nack_addr, Q=\o_nack_addr
Replacing i2c_master.$procdff$1003 ($adff): CLK=\i_clk, D=\nxt_nack_data, Q=\o_nack_data
Replacing i2c_master.$procdff$1004 ($adff): CLK=\i_clk, D=\nxt_scl_o, Q=\o_scl
Replacing i2c_master.$procdff$1005 ($adff): CLK=\i_clk, D=\nxt_sda_o, Q=\o_sda
Replacing i2c_master.$procdff$1006 ($adff): CLK=\i_clk, D=\nxt_timer, Q=\timer
Replacing i2c_master.$procdff$1007 ($adff): CLK=\i_clk, D=\NEXT_STATE, Q=\STATE
Replacing i2c_master.$procdff$1008 ($adff): CLK=\i_clk, D=\NEXT_RETURN_STATE, Q=\RETURN_STATE
Replacing i2c_master.$procdff$1009 ($adff): CLK=\i_clk, D=\nxt_sda_txqueue, Q=\sda_txqueue
Replacing i2c_master.$procdff$1010 ($adff): CLK=\i_clk, D=\nxt_read_sr, Q=\read_sr
Replacing i2c_master.$procdff$1011 ($adff): CLK=\i_clk, D=\nxt_bit_counter, Q=\bit_counter
Replacing i2c_master.$procdff$1013 ($adff): CLK=\i_clk, D=$0\r_rd[0:0], Q=\r_rd
Replacing i2c_master.$procdff$1017 ($adff): CLK=\i_clk, D=\nxt_wr_cycle, Q=\wr_cycle
Replacing i2c_master.$procdff$1019 ($adff): CLK=\i_clk, D={ \scl_sr [2:0] \i_scl }, Q=\scl_sr
Replacing i2c_master.$procdff$1020 ($adff): CLK=\i_clk, D={ \sda_sr [2:0] \i_sda }, Q=\sda_sr
Replacing i2c_master.$procdff$1021 ($adff): CLK=\i_clk, D=$0\scl_db[0:0], Q=\scl_db
Replacing i2c_master.$procdff$1022 ($adff): CLK=\i_clk, D=$0\sda_db[0:0], Q=\sda_db
Replacing i2c_master.$procdff$997 ($dff): CLK=\i_clk, D=1'1, Q=\f_past_valid
Replacing i2c_master.$procdff$998 ($adff): CLK=\i_clk, D=\nxt_rdata, Q=\o_rdata
Replacing i2c_master.$procdff$999 ($adff): CLK=\i_clk, D=\nxt_busy, Q=\o_busy

5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

6. Executing SETUNDEF pass (replace undef values with defined constants).

7. Executing OPT pass (performing simple optimizations).

7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module i2c_master.
<suppressed ~20 debug messages>

7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\i2c_master'.
<suppressed ~300 debug messages>
Removed a total of 100 cells.

7.3. Executing OPT_DFF pass (perform DFF optimizations).

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \i2c_master..
Removed 4 unused cells and 104 unused wires.
<suppressed ~5 debug messages>

7.5. Finished fast OPT passes.

8. Executing CHECK pass (checking for obvious problems).
Checking module i2c_master...
Found and reported 0 problems.

9. Executing HIERARCHY pass (managing design hierarchy).

9.1. Analyzing design hierarchy..
Top module:  \i2c_master

9.2. Analyzing design hierarchy..
Top module:  \i2c_master
Removed 0 unused modules.
Module i2c_master directly or indirectly contains formal properties -> setting "keep" attribute.

10. Executing RTLIL backend.
Output filename: ../model/design.il

End of script. Logfile hash: 770d532fbe, CPU: user 0.16s system 0.00s, MEM: 14.51 MB peak
Yosys 0.9+4081 (git sha1 7a5ac909, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 18% 7x opt_clean (0 sec), 17% 3x check (0 sec), ...
